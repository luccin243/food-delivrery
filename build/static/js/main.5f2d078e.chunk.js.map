{"version":3,"sources":["api/auth.js","config.js","loader.gif","components/login/PrivateRoute.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["dayjs","extend","isToday","signin","user","a","axios","post","API","response","data","authenticate","next","window","localStorage","setItem","JSON","stringify","date","Date","signout","removeItem","get","then","console","log","catch","error","isAuthenticated","getItem","parse","process","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","Login","lazy","Home","Type","Ets","Menu","Order","Meal","Why","Features","ContactUs","AppScreen","Download","Banner","Setting","NoMatch","App","fallback","style","width","height","display","alignItems","justifyContent","alt","src","Loader","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5f2d078e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { API } from '../config';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport dayjs from 'dayjs';\r\n\r\ndayjs.extend(isToday);\r\n\r\nexport const signin = async (user) => {\r\n  try {\r\n    const response = await axios.post(`${API}/api/signin`, user);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.setItem('jwt', JSON.stringify({ ...data, date: new Date() }));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.removeItem('jwt');\r\n    next();\r\n    return axios\r\n      .get(`${API}/api/signout`)\r\n      .then((response) => {\r\n        console.log('signout', response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == 'undefined') {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem('jwt')) {\r\n    const { date } = JSON.parse(localStorage.getItem('jwt'));\r\n    if (dayjs(date).isToday()) {\r\n      return JSON.parse(localStorage.getItem('jwt'));\r\n    }\r\n    localStorage.removeItem('jwt');\r\n    return false;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","export const API = process.env.REACT_APP_API_URL;\r\n","export default __webpack_public_path__ + \"static/media/loader.d3fbaf2b.gif\";","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from '../../api/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import { lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Loader from './loader.gif';\r\nimport PrivateRoute from './components/login/PrivateRoute';\r\nimport AdminRoute from './components/login/AdminRoute';\r\nimport './App.css';\r\n\r\nconst Login = lazy(() => import('./components/login/Login'));\r\nconst Home = lazy(() => import('./components/home/Home'));\r\n\r\n//Application\r\nconst Type = lazy(() => import('./components/type/Type'));\r\nconst Ets = lazy(() => import('./components/ets/Ets'));\r\nconst Menu = lazy(() => import('./components/menu/Menu'));\r\nconst Order = lazy(() => import('./components/order/Order'));\r\nconst Meal = lazy(() => import('./components/meal/Meal'));\r\n\r\n//LAnding page\r\nconst Why = lazy(() => import('./components/why/Why'));\r\nconst Features = lazy(() => import('./components/features/Features'));\r\nconst ContactUs = lazy(() => import('./components/contactUs/ContactUs'));\r\nconst AppScreen = lazy(() => import('./components/appScreen/AppScreen'));\r\nconst Download = lazy(() => import('./components/download/Download'));\r\nconst Banner = lazy(() => import('./components/banner/Banner'));\r\nconst Users = lazy(() => import('./components/users/Users'));\r\nconst Setting = lazy(() => import('./components/setting/Setting'));\r\nconst NoMatch = lazy(() => import('./components/noMatch/NoMatch'));\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            width: '100vw',\r\n            height: '100vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <img alt='Loader' src={Loader} />\r\n        </div>\r\n      }\r\n    >\r\n      <Router>\r\n        <Switch>\r\n          <PrivateRoute path='/' exact component={Home} />\r\n          <PrivateRoute path='/type' exact component={Type} />\r\n          <PrivateRoute path='/ets' exact component={Ets} />\r\n          <PrivateRoute path='/menu' exact component={Menu} />\r\n          <PrivateRoute path='/meal' exact component={Meal} />\r\n          <PrivateRoute path='/order' exact component={Order} />\r\n          <PrivateRoute path='/why-choose-us' exact component={Why} />\r\n          <PrivateRoute path='/banner' exact component={Banner} />\r\n          <PrivateRoute path='/features' exact component={Features} />\r\n          <PrivateRoute path='/contact-us' exact component={ContactUs} />\r\n          <PrivateRoute path='/download' exact component={Download} />\r\n          <PrivateRoute path='/app-screen' exact component={AppScreen} />\r\n          {/* <AdminRoute path='/users' exact component={Users} /> */}\r\n          <PrivateRoute path='/setting' exact component={Setting} />\r\n          <Route path='/login' exact component={Login} />\r\n          <Route path='*' exact component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}